version: '3.8'

services:
  stock-api:
    image: 'ghcr.io/ozon-edu-csharp-2021/stock-api:main'
    hostname: stock-api
    ports:
      - "5070:80"
      - "5072:82"
    networks:
      - ozon-network
    environment:
      DatabaseConnectionOptions__ConnectionString: "Host=host.docker.internal;Port=5426;Database=stock-api;Username=postgres;Password=stockApiPassword;Timeout=300;CommandTimeout=300"
      BootstrapServers: "broker:29092"
      topic: "stock_replenished_event"
      groupId: "stock-api-service"
      SupplyApiGrpcServiceConfiguration__ServerAddress: "http://supply-service:5082"
    depends_on:
      - stock-api-db
      - redis
      - supply-service
      - zookeeper
      - broker

  emailing-service:
    image: 'ghcr.io/ozon-edu-csharp-2021/emailing-service:main'
    hostname: emailing-service
    ports:
      - "8555:80"
    environment:
      KafkaTopics__EmployeeNotificationEventTopic: "employee_notification_event"
    depends_on:
      - zookeeper
      - broker
    volumes:
      - emailing-service:/src
    networks:
      - ozon-network

  employees-service:
    image: 'ghcr.io/ozon-edu-csharp-2021/employees-service:main'
    hostname: employees-service
    ports:
      - "8443:80"
    environment:
      ConnectionString: "Host=host.docker.internal;Port=5425;Database=employees-service;Username=postgres;Password=employeeServicePassword;Timeout=300;CommandTimeout=300"
      BootstrapServers: "broker:29092"
      Topic: "employee_notification_event"
    depends_on:
      - employees-service-db
      - zookeeper
      - broker
    volumes:
      - employees-service:/src
    networks:
      - ozon-network

  supply-service:
    image: 'ghcr.io/ozon-edu-csharp-2021/supply-service:main'
    hostname: supply-service
    ports:
      - "5080:5080"
      - "5082:5082"
    environment:
      DbConfiguration__ConnectionString: "Host=host.docker.internal;Port=5427;Database=supply-service;Username=postgres;Password=supplyServicePassword;Timeout=300;CommandTimeout=300"
      KafkaConfiguration__BootstrapServers: "broker:29092"
    networks:
      - ozon-network
    depends_on:
      - supply-service-db
      - zookeeper
      - broker

  merchandise-service:
    build: 
      context: .
    hostname: merchandise-service
    ports:
      - "5000:90"
    networks:
      - ozon-network
    depends_on:
      - merchandise-service-db
      - stock-api
      - emailing-service
      - employees-service
      - zookeeper
      - broker
    environment:
      DatabaseConnectionOptions__ConnectionString: "Host=host.docker.internal;Port=5428;Database=merchandise-service;Username=postgres;Password=merchandisePassword;Timeout=300;CommandTimeout=300"
      BootstrapServers: "broker:29092"
      topic: "employee_notification_event"
      groupId: "merchandise-service"
      StockApiGrpcServiceConfiguration__ServerAddress: "http://stock-api:82"
      EmployeesServiceConfiguration__ServerAddress: "http://employees-service:80"

  merchandise-service-db:
    image: postgres:latest
    ports:
      - "5428:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: merchandisePassword
      POSTGRES_DB: merchandise-service
    command: "-c log_statement=all"
    
  supply-service-db:
    image: postgres:latest
    ports:
      - "5427:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supplyServicePassword
      POSTGRES_DB: supply-service
    command: "-c log_statement=all"
    networks:
      - ozon-network
    volumes:
      - supply-service-db:/var/lib/postgresql/data
      
  employees-service-db:
    image: postgres:latest
    ports:
      - "5425:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: employeeServicePassword
      POSTGRES_DB: employees-service
    volumes:
      - employees-service-db:/var/lib/postgresql/data"
    command: "-c log_statement=all"
    networks:
      - ozon-network
        
  stock-api-db:
    image: postgres:latest
    ports:
      - "5426:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: stockApiPassword
      POSTGRES_DB: stock-api
    command: "-c log_statement=all"
    networks:
      - ozon-network
    volumes:
      - stock-api-db:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ozon-network

  broker:
    image: confluentinc/cp-kafka:6.2.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ozon-network

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - ozon-network
    hostname: redis
    
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - ozon-network

networks:
  ozon-network:
    driver: bridge

volumes:
  ozon-volume:
    driver: local
  employees-service:
    driver: local
  emailing-service:
    driver: local
  stock-api-db:
    driver: local
  supply-service-db:
    driver: local
  employees-service-db:
    driver: local